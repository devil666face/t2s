version: "3"

vars:
  gobin: go
  ldflags: "-extldflags '-static' -w -s -buildid="
  gcflags: "all=-trimpath={{.PWD}} -dwarf=false -l"
  asmflags: "all=-trimpath={{.PWD}}"
  bin: "{{.PWD}}/bin"
  app: "t2s"
  app_bin: "{{.bin}}/{{.app}}"
  remote_user: root
  remote_host: 192.168.200.53
  remote_dir: "~/"

env:
  CGO_ENABLED: 0
  GOARCH: amd64
  GOOS: linux
  COMPOSE_BAKE: true

tasks:
  setup:
    desc: set up the environment
    silent: true
    cmds:
      - mkdir -p {{.bin}}

  debug:
    desc: debug build
    deps: [setup]
    silent: true
    cmds:
      - >
        {{.gobin}} build
        -tags netgo
        -gcflags "all=-N -l"
        -o {{.app_bin}}_debug cmd/{{.app}}/main.go

  build:
    desc: common build
    deps: [setup]
    silent: true
    cmds:
      - >
        {{.gobin}} build
        -tags netgo
        -ldflags="{{.ldflags}}" 
        -trimpath 
        -gcflags="{{.gcflags}}" 
        -asmflags="{{.asmflags}}" 
        -o {{.app_bin}} cmd/{{.app}}/main.go
      - strip {{.app_bin}}
      - objcopy --strip-unneeded {{.app_bin}}

  release:
    desc: release
    deps: [build]
    silent: false
    cmds:
      - tar -cvzf {{.app_bin}}_linux_amd64.tar.gz {{.app_bin}}

  in-docker-build:
    deps: [build]
    silent: false
    cmds:
      - mv {{.app_bin}} /build/bin

  docker.build:
    desc: build bin via docker
    deps: [setup]
    silent: false
    cmds:
      - docker compose -f docker-compose.build.yaml up --build --force-recreate

  test:
    desc: Build and run
    deps: [build]
    silent: true
    cmds:
      - sudo {{.bin}}/{{.app}} -config config.override.yaml

  test-remote:
    desc: Run on remote with scp
    deps: [build]
    silent: true
    cmds:
      - scp {{.app_bin}} {{.remote_user}}@{{.remote_host}}:{{.remote_dir}}
      - scp config.override.yaml {{.remote_user}}@{{.remote_host}}:{{.remote_dir}}
      # - ssh {{.remote_user}}@{{.remote_host}} 'sudo {{.remote_dir}}/{{.app}} -config config.override.yaml'
